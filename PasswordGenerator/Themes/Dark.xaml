<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush Color="#121212" x:Key="PrimaryBackground"/>
    <SolidColorBrush Color="#202020" x:Key="SecondaryBackground"/>
    <SolidColorBrush Color="#202020" x:Key="ButtonBackground"/>
    <SolidColorBrush Color="#424242" x:Key="ButtonDetails_SliderStroke"/>
    <SolidColorBrush Color="LightGray" x:Key="Text"/>
    <SolidColorBrush Color="#07f49e" x:Key="PopupBorder"/>
    <SolidColorBrush Color="#E8E8E8" x:Key="ToggleButton_Dot"/>

    <!--Those colors are not being used, needed for convenience-->
    <Color x:Key="GradientColor1">#8000FF</Color>
    <Color x:Key="GradientColor2">#A400FF</Color>

    
    <!--#region Gradients-->
    <LinearGradientBrush x:Key="Gradient1" EndPoint="0.5,1" StartPoint="0.5,0">
        <LinearGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                <SkewTransform CenterX="0.5" CenterY="0.5"/>
                <RotateTransform Angle="45" CenterX="0.5" CenterY="0.5"/>
                <TranslateTransform/>
            </TransformGroup>
        </LinearGradientBrush.RelativeTransform>
        <GradientStop Color="#8000FF"/>
        <GradientStop Color="#A400FF" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Gradient2" EndPoint="0.5,1" StartPoint="0.5,0">
        <LinearGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                <SkewTransform CenterX="0.5" CenterY="0.5"/>
                <RotateTransform Angle="45" CenterX="0.5" CenterY="0.5"/>
                <TranslateTransform/>
            </TransformGroup>
        </LinearGradientBrush.RelativeTransform>
        <GradientStop Color="#A400FF"/>
        <GradientStop Color="#8000FF" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Gradient3" EndPoint="0.5,1" StartPoint="0.5,0">
        <LinearGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                <SkewTransform CenterX="0.5" CenterY="0.5"/>
                <RotateTransform Angle="-15.945" CenterX="0.5" CenterY="0.5"/>
                <TranslateTransform/>
            </TransformGroup>
        </LinearGradientBrush.RelativeTransform>
        <GradientStop Color="#8000FF" Offset="0"/>
        <GradientStop Color="#A400FF" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="OneColor_Gradient1" EndPoint="0.5,1" StartPoint="0.5,0">
        <LinearGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                <SkewTransform CenterX="0.5" CenterY="0.5"/>
                <RotateTransform Angle="45" CenterX="0.5" CenterY="0.5"/>
                <TranslateTransform/>
            </TransformGroup>
        </LinearGradientBrush.RelativeTransform>
        <GradientStop Color="#121212"/>
        <GradientStop Color="#121212" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="OneColor_Gradient2" EndPoint="0.5,1" StartPoint="0.5,0">
        <LinearGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                <SkewTransform CenterX="0.5" CenterY="0.5"/>
                <RotateTransform Angle="-15.945" CenterX="0.5" CenterY="0.5"/>
                <TranslateTransform/>
            </TransformGroup>
        </LinearGradientBrush.RelativeTransform>
        <GradientStop Color="#202020" Offset="0"/>
        <GradientStop Color="#202020" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="OneColor_Gradient3" EndPoint="0.5,1" StartPoint="0.5,0">
        <LinearGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                <SkewTransform CenterX="0.5" CenterY="0.5"/>
                <RotateTransform Angle="45" CenterX="0.5" CenterY="0.5"/>
                <TranslateTransform/>
            </TransformGroup>
        </LinearGradientBrush.RelativeTransform>
        <GradientStop Color="LightGray"/>
        <GradientStop Color="LightGray" Offset="1"/>
    </LinearGradientBrush>
    <!--#endregion-->


    <!--#region Close Button Style-->
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse x:Name="CB_Ellipse" Fill="{DynamicResource ButtonBackground}"/>
                        <Path x:Name="CB_Icon" IsHitTestVisible="False" HorizontalAlignment="Center" 
                               VerticalAlignment="Center" Stroke="{DynamicResource ButtonDetails_SliderStroke}" Data="M 19 5 L 4.99998 19 M 5.00001 5 L 19 19"
                               RenderTransformOrigin="0.5,0.502" Height="14" Stretch="Fill" Width="14" 
                               StrokeThickness="3" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="CB_Ellipse"
                                                     Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)"
                                                     To="#F94806" Duration="0:0:0.13"/>
                                    <ColorAnimation Storyboard.TargetName="CB_Icon"
                                                     Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)"
                                                     To="#860303" Duration="0:0:0.13"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="CB_Ellipse"
                                                     Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)"
                                                     To="#202020" Duration="0:0:0.13"/>
                                    <ColorAnimation Storyboard.TargetName="CB_Icon"
                                                     Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)"
                                                     To="#424242" Duration="0:0:0.13"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Minimize Button Style-->
    <Style x:Key="MinimizeButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse x:Name="MB_Ellipse" Fill="{DynamicResource ButtonBackground}"/>
                        <Path x:Name="MB_Icon" IsHitTestVisible="False" HorizontalAlignment="Center" 
                       VerticalAlignment="Center" Stroke="{DynamicResource ButtonDetails_SliderStroke}" Data="M 3 12 L 21 12"
                       RenderTransformOrigin="0.5,0.502" Height="14" Stretch="Fill" Width="14" 
                       StrokeThickness="3" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="MB_Ellipse"
                                             Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)"
                                             To="#F9F906" Duration="0:0:0.13"/>
                                    <ColorAnimation Storyboard.TargetName="MB_Icon"
                                             Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)"
                                             To="#A4A404" Duration="0:0:0.13"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="MB_Ellipse"
                                             Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)"
                                             To="#202020" Duration="0:0:0.13"/>
                                    <ColorAnimation Storyboard.TargetName="MB_Icon"
                                             Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)"
                                             To="#424242" Duration="0:0:0.13"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Toggle button styles-->

    <Style x:Key="ToggleButtonUnchecked" TargetType="{x:Type ToggleButton}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="ClickMode" Value="Press"/>
        <!--Setter Property="Opacity" Value="0"/-->
        <Setter Property="Width" Value="45"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Height="25" Width="45" 
                           VerticalAlignment="Top" HorizontalAlignment="Right">

                        <Border x:Name="ToggleBG" Background="{DynamicResource OneColor_Gradient2}" 
                                 CornerRadius="12.5" />

                        <Ellipse x:Name="ToggleEllipse" 
                                  Fill="{DynamicResource ToggleButton_Dot}"
                                  Width="18" Height="18" Margin="-18,0,0,0"
                                  >
                        </Ellipse>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <!--Event Trigger checked-->
                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetName="ToggleEllipse"
                                                         Storyboard.TargetProperty="Margin"
                                                         To="18,0,0,0" Duration="0:0:0.15" />

                                    <ColorAnimation Storyboard.TargetName="ToggleBG"
                                         Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].Color"
                                         To="#8000FF" Duration="0:0:0.15"/>
                                    <ColorAnimation Storyboard.TargetName="ToggleBG"
                                         Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].Color"
                                         To="#A400FF" Duration="0:0:0.15"/>

                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <!--Event trigger Unchecked-->
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetName="ToggleEllipse"
                                                         Storyboard.TargetProperty="Margin"
                                                         To="-18,0,0,0" Duration="0:0:0.15" />

                                    <ColorAnimation Storyboard.TargetName="ToggleBG"
                                         Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].Color"
                                         To="#202020" Duration="0:0:0.15"/>
                                    <ColorAnimation Storyboard.TargetName="ToggleBG"
                                         Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].Color"
                                         To="#202020" Duration="0:0:0.15"/>

                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonChecked" TargetType="{x:Type ToggleButton}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="ClickMode" Value="Press"/>
        <!--Setter Property="Opacity" Value="0"/-->
        <Setter Property="Width" Value="45"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Height="25" Width="45" 
                      VerticalAlignment="Top" HorizontalAlignment="Right">

                        <Border x:Name="ToggleBG" Background="{DynamicResource Gradient3}" 
                            CornerRadius="12.5" />

                        <Ellipse x:Name="ToggleEllipse" 
                             Fill="{DynamicResource ToggleButton_Dot}"
                             Width="18" Height="18" Margin="18,0,0,0"
                             >
                        </Ellipse>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <!--Event Trigger checked-->
                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetName="ToggleEllipse"
                                                    Storyboard.TargetProperty="Margin"
                                                    To="18,0,0,0" Duration="0:0:0.15" />

                                    <ColorAnimation Storyboard.TargetName="ToggleBG"
                                    Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].Color"
                                    To="#8000FF" Duration="0:0:0.15"/>
                                    <ColorAnimation Storyboard.TargetName="ToggleBG"
                                    Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].Color"
                                    To="#A400FF" Duration="0:0:0.15"/>

                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <!--Event trigger Unchecked-->
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetName="ToggleEllipse"
                                                    Storyboard.TargetProperty="Margin"
                                                    To="-18,0,0,0" Duration="0:0:0.15" />

                                    <ColorAnimation Storyboard.TargetName="ToggleBG"
                                    Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].Color"
                                    To="#202020" Duration="0:0:0.15"/>
                                    <ColorAnimation Storyboard.TargetName="ToggleBG"
                                    Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].Color"
                                    To="#202020" Duration="0:0:0.15"/>

                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--#endregion-->

    <!--#region TextBoxes Styles-->
    <Style x:Key="PassBoxStyle1" TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Text" Value="-"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Foreground" Value="{DynamicResource Text}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsReadOnlyCaretVisible" Value="False"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="No"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PassBoxStyle2" TargetType="{x:Type TextBox}" BasedOn="{StaticResource PassBoxStyle1}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Foreground" Value="{DynamicResource Gradient1}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--endregion-->

    <!--#region Generate button style-->
    <Style x:Key="GenerateButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Gradient1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Gradient1}"/>
        <Setter Property="Foreground" Value="{DynamicResource OneColor_Gradient3}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Width" Value="285"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="FontFamily" Value="Poppins"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="18" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>

                                    <ColorAnimation
                                         Storyboard.TargetProperty="(Button.Background).(LinearGradientBrush.GradientStops)[0].Color"
                                         To="#181818" Duration="0:0:0.13"
                                         />
                                    <ColorAnimation
                                         Storyboard.TargetProperty="(Button.Background).(LinearGradientBrush.GradientStops)[1].Color"
                                         To="#202020" Duration="0:0:0.13"/>

                                    <ThicknessAnimation
                                         Storyboard.TargetProperty="BorderThickness"
                                         To="2.7" Duration="0:0:0"/>

                                    <ColorAnimation
                                         Storyboard.TargetProperty="(Button.Foreground).(LinearGradientBrush.GradientStops)[0].Color"
                                         To="#8000FF" Duration="0:0:0.13"/>
                                    <ColorAnimation
                                         Storyboard.TargetProperty="(Button.Foreground).(LinearGradientBrush.GradientStops)[1].Color"
                                         To="#A400FF" Duration="0:0:0.13"/>

                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>

                                    <ColorAnimation
                                         Storyboard.TargetProperty="(Button.Background).(LinearGradientBrush.GradientStops)[0].Color"
                                         To="#8000FF" Duration="0:0:0.13"/>
                                    <ColorAnimation
                                         Storyboard.TargetProperty="(Button.Background).(LinearGradientBrush.GradientStops)[1].Color"
                                         To="#A400FF" Duration="0:0:0.13"/>

                                    <ThicknessAnimation
                                         Storyboard.TargetProperty="BorderThickness"
                                         To="0" Duration="0:0:0"/>

                                    <ColorAnimation
                                         Storyboard.TargetProperty="(Button.Foreground).(LinearGradientBrush.GradientStops)[0].Color"
                                         To="LightGray" Duration="0:0:0.13"/>
                                    <ColorAnimation
                                         Storyboard.TargetProperty="(Button.Foreground).(LinearGradientBrush.GradientStops)[1].Color"
                                         To="LightGray" Duration="0:0:0.13"/>

                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                         Storyboard.TargetProperty="RenderTransform.ScaleX"
                                         To="0.95"
                                         Duration="0:0:0.1"/>
                                    <DoubleAnimation
                                         Storyboard.TargetProperty="RenderTransform.ScaleY"
                                         To="0.95"
                                         Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="PreviewMouseUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                         Storyboard.TargetProperty="RenderTransform.ScaleX"
                                         To="1"
                                         Duration="0:0:0.1"/>
                                    <DoubleAnimation
                                         Storyboard.TargetProperty="RenderTransform.ScaleY"
                                         To="1"
                                         Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Slider style-->
    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonColored" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border Background="Transparent" 
                                 BorderBrush="{DynamicResource Gradient2}" BorderThickness="4" 
                                 Height="8.0" Margin="4, 0, -14, 0" Grid.Row="1" VerticalAlignment="center" 
                                 CornerRadius="3"/>
                        <Rectangle Fill="Transparent" Height="{TemplateBinding Height}" 
                                    Width="{TemplateBinding Width}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Thumb-->
    <ControlTemplate x:Key="SliderThumbHorizontal" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
            <Ellipse x:Name="grip" Width="18" Height="18" Fill="{DynamicResource ToggleButton_Dot}" Stroke="{DynamicResource Gradient1}" StrokeThickness="2"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDragging" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="#CDCDCD"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
        <Border x:Name="border" Background="Transparent" BorderBrush="Transparent" SnapsToDevicePixels="True"
                 Height="18">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Border x:Name="TrackBackground" Background="Transparent" BorderBrush="{DynamicResource ButtonDetails_SliderStroke}" BorderThickness="2" Height="8.0" 
                        Margin="5,0" Grid.Row="1" VerticalAlignment="center" CornerRadius="3">
                    <Canvas Margin="-6,-1">
                        <Rectangle x:Name="PART_SelectionRange" Height="8.0" Visibility="Hidden"/>
                    </Canvas>
                </Border>

                <Track x:Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="Slider.DecreaseLarge" Style="{StaticResource RepeatButtonColored}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="Slider.IncreaseLarge" Style="{StaticResource RepeatButtonTransparent}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb" Focusable="False" Height="18"
                                OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontal}" 
                                VerticalAlignment="Center" Width="18"/>
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Thumb" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="false">
                <Setter TargetName="Thumb" Property="Visibility" Value="Hidden"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
    </Style>
    <!--#endregion-->

</ResourceDictionary>